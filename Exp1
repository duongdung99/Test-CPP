#include <iostream>
#include <vector>
#include <stack>
using namespace std;

int getMinimumConnections(vector<vector<bool>>& matrix) 
{
    int numConnections = 0; // numconnection la so ket noi can co de cac san bay co the ket noi den nhau
    int n = matrix.size(); // khai bao n la so san bay 
    vector<bool> airport(n, false); // xet lan luot cac san bay tu 1 den n, ban dau cac san bay chua xet den th√¨ la false, sau khi xet xong la true

    for (int i = 0; i < n; i++) 
    {
        if (airport[i] == false)
        {
            stack <int> s; // gia su s la 1 vector chua cac san bay chua duoc xet den 
            s.push(i);
            while (s.empty() == false)
            {
                int v = s.top(); //bat dau xet tu san bay dau tien
                airport[v] = true;
                s.pop();
                for (int j = i+1; j < n; j++)
                {
                    if (matrix[v][j] && airport[j] == false) 
                    {
                        s.push(j); //thuc hien so sanh 1 san bay vs cac san bay con lai, neu co ket noi thi tiep tuc push
                                   // cac san bay do vao s de thuc hien so sanh tiep 
                    }
                }
            }
            numConnections++;
        }
    }
    return numConnections - 1; // vi san bay cuoi cung da duoc xet voi tat ca cac san bay con lai nen truong hop xet san bay cuoi se lam gia tri tang len 1
}

#ifndef RunTests
int main()
{
    vector <vector<bool>> matrix
    {
        {false, true, false, false, true},
        {true, false, false, false, false},
        {false, false, false, true, false},
        {false, false, true, false, false},
        {true, false, false, false, false}
    };

    cout << getMinimumConnections(matrix) << endl; // should print 1
}
#endif
